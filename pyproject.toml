[project]
description = "A website to scrape? There's a simple way."
dynamic = ["version"]
license = {file = "LICENSE"}
name = "scrape-it-now"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "aiofiles~=24.1",
  "aiohttp~=3.10",
  "aiosqlite~=0.20",
  "azure-monitor-opentelemetry~=1.6",
  "azure-search-documents==11.6.0b4",
  "azure-storage-blob~=12.22",
  "azure-storage-queue~=12.11",
  "click~=8.1",
  "openai~=1.42",
  "opentelemetry-instrumentation-aiohttp-client~=0.0",
  "opentelemetry-instrumentation-httpx~=0.0",
  "opentelemetry-instrumentation-openai~=0.0",
  "opentelemetry-instrumentation-redis~=0.0",
  "opentelemetry-instrumentation-sqlite3~=0.0",
  "playwright~=1.46",
  "pydantic~=2.8",
  "pypandoc~=1.13",
  "python-dotenv~=1.0",
  "tenacity~=9.0",
  "tiktoken~=0.7",
]

[project.optional-dependencies]
dev = [
  "deptry~=0.19",  # Dependency tree testing
  "pip-tools~=7.4",  # Compile requirements.txt from pyproject.toml
  "pyinstaller~=6.10",  # Create standalone executable
  "pyright~=1.1",  # Static type checker
  "pytest-asyncio~=0.23",  # Pytest plugin for async tests
  "pytest-repeat~=0.9",  # Pytest plugin for repeating tests
  "pytest-xdist[psutil]~=3.6",  # Pytest plugin for parallel testing
  "pytest~=8.3",  # Testing framework
  "ruff~=0.6",  # Linter
]

[project.scripts]
scrape-it-now = "app.app:cli"

[tool.setuptools]
py-modules = [
  "app",
]

[tool.pip-tools]
generate-hashes = true
strip-extras = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
junit_suite_name = "scrape-it-now"
log_file = "test-reports/last-logs.txt"
log_file_level = "INFO"

[tool.deptry]
ignore_notebooks = true
pep621_dev_dependency_groups = ["dev"]

[tool.deptry.per_rule_ignores]
DEP002 = [
  "aiohttp",  # Async HTTP client for Azure SDKs
]
DEP003 = [
  "certifi",  # Patch for CA certificates when built with PyInstaller
]

[tool.ruff]
target-version = "py312"

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.format]
docstring-code-format = true

[tool.pyright]
pythonVersion = "3.12"
